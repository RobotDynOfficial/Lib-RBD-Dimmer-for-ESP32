Данная библиотека предназначена для работы с диммером при помощи плат на основе контролера ESP32. 
Дает возможность управления большим количеством диммеров используя аппаратный таймер и внешние прерывания по заданному пину
Для диммерования не могут использоватся пины под номерами 28(GPIO9), 29(GPIO10), 30(GPIO11), 31(GPIO6), 33(GPIO8), 5(GPIO36), 8(GPIO39), 10(GPIO34), 11(GPIO35), 32(GPIO7)
Для работы с Zero-Cross не могут использоватся пины под номерами 28(GPIO9), 29(GPIO10), 30(GPIO11), 31(GPIO6), 33(GPIO8)
Использование данной библиотеки упрощает код пользователя при помощи функций:
    1. функция  dimmerLampESP32 - данная функция инициализирует значение пина управления и пина zero-cross, заданных пользователем.
    Пример dimmerLampESP32 dimmer(12, 14);   диммер выход DIM/PSM инциализировался на пин 12, а Zero-Cross на инициализирован на 14-й пин
     
    2. функция begin - инициализация портов, таймера и внешнего прерывания от zero-cross.
        Инициализация zero-cross задается пользователем за исключением пинов A0, D0(GPIO16), D3(GPIO00), D4(GPIO2).
    Пример dimmer4.begin(NORMAL_MODE, ON/OFF); инициализация портов, выбор режима работы, вкл/выкл. 
    Параметр 1: Выбор режим работы диммера состоит из двух вариантов  NORMAL_MODE и TOGGLE_MODE 

        а. NORMAL_MODE работа диммера в заданном значении от 0 до 100 (%) (целочисленное)
            Пример работы режима находится в папке \RBDdimmer\examples\SimpleDimmerESP32
        б. TOGGLE_MODE плавное изменение значения димминга увеличение и снижение в заданных границах. Данное решение построенно на изменении значения диминга за счет 
            аппаратного таймера и не использует код цикла.
            Пример работы режима находится в папке \RBDdimmerESP32\examples\SimpleToggleDimmerESP32

    Параметр 2: ON/OFF.
        a. ON - включение таймера, диммер использовать можно.
        a. OFF - выключение параметров для таймера, диммер использовать нельзя.


    3. Функция setPower установка значения димминга от 0 до 100%
        Пример dimmer4.setPower(90);

    4. Функция getPower используется для того что бы получить текущее значение димминга
        Пример Serial.print(dimmer4.getPower()); Result 0~100 int
   
    5. Функция setMode установка или изменение мода режимами работы (NORMAL_MODE и TOGGLE_MODE)
                dimmer4.setMode(NORMAL_MODE/TOGGLE_MODE)

    6. Функция getMode полученние нынешнего значения режима работы 
        Пример Serial.print(dimmer4.getPower());  Result 0 (NORMAL_MODE) or 1 (TOGGLE_MODE)
   
    7. Функция setState задет состояние димминга ON/OFF
        Пример dimmer4.setState(ON); delay(100); dimmer4.setState(OFF);
   
    8. Функция getState полученние нынешнего значения состояния диммера
        Serial.print(dimmer4.getState()); Result 0 (OFF) or 1 (ON)
   
    9. Функция changeState изменяет состояние диммера на противоположное 
        Пример dimmer4.setState(ON); delay(100); dimmer4.changeState; delay(100);
  
    10. Функция toggleSettings плавное изменение значения димминга увеличение и снижение в заданных границах
        Пример находится в папке \RBDdimmerESP32\examples\SimpleToggleDimmerESP32
